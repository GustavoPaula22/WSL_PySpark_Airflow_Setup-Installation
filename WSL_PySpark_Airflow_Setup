1. Habilitar o WSL no Windows

1.1. Abrir o PowerShell como Administrador:
- Clique com o botão direito no menu Iniciar e selecione "Windows PowerShell (Admin)".
habilite o wsl
Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy RemoteSigned

1.2. Habilitar o WSL:
- No PowerShell, execute:
  wsl --install
- Isso instalará o WSL e o Ubuntu como distribuição padrão.

1.3. Reiniciar o computador:
- Após a instalação, reinicie o sistema.

1.4. Configurar o Ubuntu:
- Após reiniciar, abra o Ubuntu no menu iniciar. Será solicitado que você crie um nome de usuário e senha para o Ubuntu.

2. Atualizar e instalar pacotes básicos no Ubuntu

2.1. Atualizar o sistema:
  sudo apt update && sudo apt upgrade -y

2.2. Instalar ferramentas essenciais:
  sudo apt install build-essential curl file git -y

3. Instalar Python e pip

3.1. Instalar Python:
  sudo apt install python3 python3-pip python3-venv -y

3.2. Verificar a instalação:
  python3 --version
  pip3 --version

4. Instalar e configurar Spark e PySpark

4.1. Instalar Java:
  sudo apt-get update
  sudo apt install openjdk-11-jdk -y
  java -version

  wget https://dlcdn.apache.org/spark/spark-3.5.2/spark-3.5.2-bin-hadoop3.tgz
  tar -xvzf spark-3.5.2-bin-hadoop3.tgz
  sudo mv spark-3.5.2-bin-hadoop3 /opt/spark


 - Agora configure as variáveis de ambiente:
  export SPARK_HOME=/usr/local/spark
  export PATH=$PATH:$SPARK_HOME/bin:$SPARK_HOME/sbin
  export PYSPARK_PYTHON=python3
  export PYSPARK_DRIVER_PYTHON=python3
  source ~/.bashrc

 - Verifica se o Spark está iniciando corretamente:
  spark-shell

5. Instalar e configurar o Apache Airflow

5.1. Criar e ativar um ambiente virtual:
  python3 -m venv airflow_venv

5.2. Instalar o Airflow com suporte para PySpark:
  export AIRFLOW_HOME=~/airflow
  export PATH="$HOME/.local/bin:$PATH"
  AIRFLOW_VERSION=2.10.0
  PYTHON_VERSION="$(python3 -c 'import sys; print(f"{sys.version_info.major}.{sys.version_info.minor}")')"
  CONSTRAINT_URL="https://raw.githubusercontent.com/apache/airflow/constraints-${AIRFLOW_VERSION}/constraints-${PYTHON_VERSION}.txt"
  source ~/.bashrc

  source airflow_venv/bin/activate
  pip3 install "apache-airflow==${AIRFLOW_VERSION}" --constraint "${CONSTRAINT_URL}"

6. Instalar e configurar o PostgreSQL

6.1. Instale o PostgreSQL:
   sudo apt install postgresql postgresql-contrib -y
   sudo service postgresql start
   sudo service postgresql status

6.2. Acesse o PostgreSQL:
   sudo -i -u postgres

6.3. Crie um banco de dados e um usuário para o Airflow:
   psql
   CREATE DATABASE airflow_db;
   CREATE USER airflow_user WITH PASSWORD 'yourpassword';
   ALTER ROLE airflow_user SET client_encoding TO 'utf8';
   ALTER ROLE airflow_user SET default_transaction_isolation TO 'read committed';
   ALTER ROLE airflow_user SET timezone TO 'UTC';
   GRANT ALL PRIVILEGES ON DATABASE airflow_db TO airflow_user;
   \q
   exit

6.4. Instale o driver do PostgreSQL para Python:
   pip install psycopg2-binary

7. Configurar o Airflow para usar o PostgreSQL

7.1. Edite o arquivo de configuração airflow.cfg:
   nano ~/airflow/airflow.cfg
   Localize a seção [core] e altere a linha sql_alchemy_conn para:
     sql_alchemy_conn = postgresql+psycopg2://airflow_user:yourpassword@localhost/airflow_db
   Localize a linha executor e altere para:
     executor = LocalExecutor

8.1. Migrar o banco de dados do Airflow:
  airflow db init

8.2. Criar um usuário administrador:
  airflow users create \
      --username gustavo \
      --firstname Gustavo \
      --lastname Paula \
      --role Admin \
      --email admin@example.com
	  
8.3. Instalar PySpark:
  pip3 install pyspark
  
8.4. Cria a pasta das Dags:
mkdir -p ~/airflow/dags
  

### Comandos de Apoio
- Comando para criar arquivos Python:
  touch ~/airflow/dags/dag_pyspark_exemplo.py 

- Desativar ambiente virtual Python:
  deactivate

- Deletar um diretório:
  rm -rf airflow_venv

- Abrir o Visual Studio Code:
  code .

- Iniciar serviços Airflow:
  airflow webserver --port 8080 
  airflow scheduler

No PowerShell
  instalar o ubuntu
- wsl --install -d Ubuntu

  dessistalar o ubuntu
- wsl --unregister Ubuntu

  ver distribuições instaladas
- wsl --list --all
